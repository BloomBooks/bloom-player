/* These rules mostly tweak fixed print layouts, currently enforcing 16x9 layout,
like Bloom Reader, and overriding rules, mainly from previewMode.css, that we don't
want in this control.
Much of it could go away if we exclude previewMode.css, or if we end up with a server
process which produces an htm file in the Bloom Reader state, or if we re-architect so
there is some simple way like a root class to toggle a book's appearance to BR mode.*/
@font-face {
  font-family: "slick";
  font-weight: normal;
  font-style: normal;
  src: url("fonts/slick.ttf") format("truetype");
}
/* The Andika New Basic font might be found already installed. Failing that,
 * if we're inside BloomReader or RAB, we should be able to get it at the standard
 * URL for assets embedded in the program. If instead we're embedded in a web
 * page like BloomLibrary.org, we need to download from the web.
 * Note that currently that last option will only work when the page origin
 * is *bloomlibrary.org. This helps limit our exposure to large charges from
 * people using our font arbitrarily. This does include, however, books
 * displayed in an iframe using https://bloomlibrary.org/bloom-player/bloomplayer.htm*/
@font-face {
  font-family: "Andika New Basic";
  font-weight: normal;
  font-style: normal;
  src: local("Andika New Basic"), url("file:///android_asset/fonts/Andika New Basic/AndikaNewBasic-R.ttf"), url("https://bloomlibrary.org/fonts/Andika%20New%20Basic/AndikaNewBasic-R.woff");
}
@font-face {
  font-family: "Andika New Basic";
  font-weight: bold;
  font-style: normal;
  src: local("Andika New Basic Bold"), url("file:///android_asset/fonts/Andika New Basic/AndikaNewBasic-B.ttf"), url("https://bloomlibrary.org/fonts/Andika%20New%20Basic/AndikaNewBasic-B.woff");
}
@font-face {
  font-family: "Andika New Basic";
  font-weight: normal;
  font-style: italic;
  src: local("Andika New Basic Italic"), url("file:///android_asset/fonts/Andika New Basic/AndikaNewBasic-I.ttf"), url("https://bloomlibrary.org/fonts/Andika%20New%20Basic/AndikaNewBasic-I.woff");
}
@font-face {
  font-family: "Andika New Basic";
  font-weight: bold;
  font-style: italic;
  src: local("Andika New Basic Bold Italic"), url("file:///android_asset/fonts/Andika New Basic/AndikaNewBasic-BI.ttf"), url("https://bloomlibrary.org/fonts/Andika%20New%20Basic/AndikaNewBasic-BI.woff");
}
/* The rules in the book reset this counter at the body level, but since we scope our
rules to apply at a lower level, that rule doesn't work. We need to reset at a level
above the page so that page numbers will increment.*/
.pageSlider {
  counter-reset: pageNumber;
}
/* makes context pages smaller and dimmer than regular ones */
.bloomPlayer .pageSlider .contextPage .bloom-page {
  margin-left: 10%;
  width: 80%;
  margin-top: 10%;
  padding-top: calc(142.22222222%);
  /* of width! */
  opacity: 0.6;
  background-color: darkgray;
}
/*@media screen and (-webkit-min-device-pixel-ratio: 0) {
    span.ui-audioCurrent:not(.disableHighlight) {
        background: linear-gradient(@audioHighlighting, @audioHighlighting);
        background-blend-mode: overlay;
        mix-blend-mode: overlay;
    }
}*/
.Title-On-Cover-style span.ui-audioCurrent:not(.disableHighlight) {
  display: inline-block;
}
span.ui-audioCurrent:not(.disableHighlight),
div.ui-audioCurrent:not(.disableHighlight) p {
  background-color: yellow;
}
div.ui-audioCurrentImg {
  box-sizing: border-box;
  border: 5px solid yellow;
}
/* the default positioning of these dots is inside the page area, but our pages overlap them.
Also, if there are more than will fit on a line, some drop outside the control altogether.
We just make them follow the main content normally. */
.bloomPlayer .slick-dots {
  position: relative;
  bottom: initial;
}
#control-bar {
  transition: margin-top 0.3s;
  margin-top: -56px;
}
#control-bar .filler {
  flex-grow: 1;
}
#control-bar.visible {
  margin-top: 0;
}
@media (min-width: 0px) and (orientation: landscape) {
  #control-bar {
    margin-top: -48px;
  }
}
@media (min-width: 600px) {
  #control-bar {
    margin-top: -64px;
  }
}
.bloomPlayer .swiper-button-next {
  border-radius: 2mm 0 0 2mm;
}
.bloomPlayer .swiper-button-prev {
  border-radius: 0 2mm 2mm 0;
  z-index: 1;
}
.bloomPlayer .swiper-button-next,
.bloomPlayer .swiper-button-prev {
  height: 67%;
  top: 18%;
  background-color: transparent;
  opacity: 0.4;
  background-repeat: no-repeat;
  background-size: 4mm;
  background-position: center;
  background-image: none;
}
.bloomPlayer .swiper-button-next:hover,
.bloomPlayer .swiper-button-prev:hover {
  opacity: 0.9;
  background-color: #cbcbcb;
}
.bloomPlayer .swiper-button-next:before,
.bloomPlayer .swiper-button-prev:before {
  position: relative;
  font-family: "slick";
  font-size: 20px;
  line-height: 1;
  top: calc(28%);
  left: 19%;
}
.bloomPlayer .swiper-button-next.swiper-button-disabled,
.bloomPlayer .swiper-button-prev.swiper-button-disabled {
  display: none;
}
.bloomPlayer .swiper-button-next:before {
  content: "→";
}
.bloomPlayer .swiper-button-prev:before {
  content: "←";
}
.bloomPlayer .bloom-editable.bloom-visibility-code-on {
  overflow-y: auto !important;
}
.bloomPlayer .titlePage .bloom-editable,
.bloomPlayer .credits .bloom-editable {
  line-height: normal !important;
}
.bloomPlayer .bloom-page.cover .bloom-editable {
  overflow-y: visible !important;
}
.bloomPlayer .swiper-button-next::before,
.bloomPlayer .swiper-button-prev::before {
  color: #d65649;
  opacity: 0.5;
}
.bloomPlayer .swiper-button-next {
  border-radius: 0 2mm 2mm 0;
}
.bloomPlayer .swiper-button-prev {
  border-radius: 2mm 0 0 2mm;
}
.bloomPlayer:not(.largeOutsideButtons) .swiper-button-next {
  right: 0;
}
.bloomPlayer:not(.largeOutsideButtons) .swiper-button-prev {
  left: 0;
}
.bloomPlayer.smallOutsideButtons .swiper-button-next,
.bloomPlayer.smallOutsideButtons .swiper-button-prev {
  width: 30px;
}
.bloomPlayer.smallOutsideButtons .swiper-button-next::before,
.bloomPlayer.smallOutsideButtons .swiper-button-prev::before {
  font-size: 20pt;
  left: 5%;
}
.bloomPlayer.smallOutsideButtons .swiper-button-next {
  right: -30px;
}
.bloomPlayer.smallOutsideButtons .swiper-button-prev {
  left: -30px;
}
.bloomPlayer.largeOutsideButtons .swiper-button-next,
.bloomPlayer.largeOutsideButtons .swiper-button-prev {
  width: 100px;
}
.bloomPlayer.largeOutsideButtons .swiper-button-next::before,
.bloomPlayer.largeOutsideButtons .swiper-button-prev::before {
  font-size: 48pt;
}
.bloomPlayer.largeOutsideButtons .swiper-button-next {
  right: -100px;
}
.bloomPlayer.largeOutsideButtons .swiper-button-prev {
  left: -100px;
}
@media (hover: none) {
  .bloomPlayer .swiper-button-next,
  .bloomPlayer .swiper-button-prev {
    visibility: hidden;
  }
  .bloomPlayer.showNavigationButtonsEvenOnTouchDevices .swiper-button-next,
  .bloomPlayer.showNavigationButtonsEvenOnTouchDevices .swiper-button-prev {
    visibility: visible;
  }
}
.bloomPlayer.hideNextPrevButtons .swiper-button-next,
.bloomPlayer.hideNextPrevButtons .swiper-button-prev {
  display: none;
}
/* override the rule in bloom-preview that puts a border at the bottom of each page
to separate the pages in a continuous scrolling view. Unfortunately that rule is
!important so the only way to beat it is to be !important too. We also need more than
 two classes. */
.bloomPlayer .actual-page-preview div.bloom-page {
  border-bottom: initial !important;
}
/* we're giving pages in this control less margin than in regular previews,
so we need the page number further down to reduce the chance of overlap. */
.bloomPlayer .numberedPage::after {
  bottom: 2px;
}
/* the reduced margin means we need to adjust the horizontal position to
align the page number with the margin, too. */
.bloomPlayer .numberedPage:nth-of-type(2n + 1)::after {
  left: 5%;
}
/* logically we would need this to override the rule for right pages,
but actually in this control the pages don't have a common direct parent,
so nth-of-type doesn't do what we want and all the pages come out as left.
Not trying to solve this for now as we want an architectural solution
that makes available to the control files more like Bloom Reader uses */
.bloomPlayer .numberedPage:nth-of-type(2n)::after {
  right: 5%;
}
html {
  height: 100%;
}
body,
#root {
  margin: 0;
  height: 100%;
  overflow: hidden;
  background-color: #2e2e2e;
}
.bloom-page div.bloom-imageContainer.hidePage {
  height: 100%;
  width: 100%;
  position: absolute !important;
  left: 0;
  top: 0;
  z-index: 2000;
  background-color: black;
}
.hidePage ~ * {
  z-index: 1;
}
